// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/
$(function(){

//*** JS OBJECTS and PROTOTYPES ***//

  //Javascript Model Objects and prototype for Game
  function Game(data) {
    this.id = data.id;
    this.capacity = data.capacity;
    this.status = data.game_status;
    this.players = data.players;
    this.nights = data.nights;
    this.characters = data.characters;
  }

  Game.prototype.winner = function() {
    var winner = "";
    if(this.status === "good_people") {
      winner = "Good People Won" 
    } else if(this.status === "mafia") {
      winner = "Mafia Won"
    } else {
      winner = "<span style='color:#f85c37;'>PLAYING<span>"
    }
    return winner;
  }
  
  Game.prototype.lastNight = function() {
    var nights = this.nights;
    var gameId = this.id;
    var lastNight = new Night(nights[nights.length - 1], gameId);
    return lastNight;
  }

  Game.prototype.end = function() {
    var status = this.status
    if (status === "stillplaying") {
      return false;
    } else {
      return true;
    }
  }

  Game.prototype.renderResult = function() {
    var result = this.status;
    $("div#gameStatus h2").html("GAME OVER");  
    if(result === "mafia") {
      $("div#result h3").html("Mafia Won!");
    } else {
      $("div#result h3").html("Good People Won!");
    }
    var nightRoundups = "";
    var nights = this.nights;
    nights.forEach(function(night, index, nights) {
      var nightNumber = index+1;
      nightRoundups += "<br/><div class='row'><h4>NIGHT " + nightNumber + "</h4>" + night.notes + "<div class='btn btn-outline-primary toggleB'>What Happened</div><p class='toggleP' style='display: none;'>" + night.logs + "</p>" + "</div>";
    });
    $("div#nightRoundup").hide().html(nightRoundups);
  }

  Game.prototype.buildEditNightForm = function() {
    var players = this.players;
    var gameId = this.id;
    var nightId = this.lastNight().id;
    var formHtml = "<form class='edit_night' id='edit_night_" + nightId + "' action='/games/" + gameId + "/nights/" + nightId  + "' accept-charset='UTF-8' method='post'><input name='utf8' type='hidden' value='✓'><input type='hidden' name='_method' value='patch'><label for='day_event_executed'>Did anyone get executed by voting to death?</label>&nbsp;<select name='day_event[executed]' id='day_event_executed'><option value=''>No one got executed</option>";

    players.forEach(function(player) {
      if(player.alive) {
        formHtml += "<option value='"+ player.id + "'>" + player.name + "</option>";
      }
    });
    
    formHtml += "</select><br/><br/><input type='submit' name='commit' value='Night is coming...' class='btn btn-primary' data-disable-with='Night is coming...'></form>";
    return formHtml;
  }

  Game.prototype.buildNewNightForm = function() {
    var players = this.players;
    var characters = this.characters;
    var gameId = this.id;
    var aliveCharacters = this.aliveCharacters(players, characters);
    var formHtml = "<form class='new_night' id='new_night' action='/games/" + gameId + "/nights' accept-charset='UTF-8' method='post'><input name='utf8' type='hidden' value='✓'>"
    
    aliveCharacters.forEach(function(c) {
      formHtml += "<fieldset><label>Who did " + c.name + " " + c.ability + "?</label>&nbsp;<select name='night_events[" + c.name + "]'><option value=''>Please Select</option>";
      players.forEach(function(player) {
        if(player.alive) {
          formHtml += "<option value='"+ player.id + "'>" + player.name + "</option>";
        }
      });
      formHtml += "</select></fieldset>";
    });
    
    formHtml += "<br><input type='submit' name='commit' value='Night is over' class='btn btn-outline-primary' data-disable-with='Night is over'></form>"
    
    return formHtml;
  }

  Game.prototype.aliveCharacters = function(players, characters) {

    var findAliveCharacters = function(players, characters) {
      var alivePlayers = [];
      var aliveCharacters = [];

      players.forEach(function(player) { 
        if(player.alive) {
          alivePlayers.push(player);  
        }
      });

      characters.forEach(function(character) {
        var characterId = character.id;
        function cId(alivePlayer) {
          return alivePlayer.character_id === characterId;
         }
        if(alivePlayers.find(cId) && !!character.ability) {
          aliveCharacters.push(character);
        }
      });
      
      return aliveCharacters;
    }

    var sortById = function sortByKey(array, key) {
      return array.sort(function(a, b) {
        var x = a[key]; var y = b[key];
        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
      });
    }

    var aliveCharacters = sortById(findAliveCharacters(players, characters), "id");

    return aliveCharacters;
  }
  
  //Javascript Model Objects and prototype for Night
  function Night(night, gameId) {
    this.id = night.id;
    this.logs = night.logs;
    this.notes = night.notes;
    this.gameId = gameId;
  }

  Night.prototype.renderLastNight = function() {
    var aboutLastNight = this.notes + "<br/><div id='logs'><a class='btn btn-outline-primary' href='/games/" + this.gameId + "/nights/" + this.id + "' role='button'>What Happened</a></div>";
    return aboutLastNight;
  }



//*** ANIMATIONS and AJAX CALLS ***//

  // Menu settings
  $('#menuToggle, .menu-close').on('click', function(){
    $('#menuToggle').toggleClass('active');
    $('body').toggleClass('body-push-toleft');
    $('#theMenu').toggleClass('menu-open');
  });

  // hide buttons and show hidden form
  $("a#new_game").click(function(e) {
    $("div.buttons").fadeOut("slow", function(){
      $("div.hiddenform").fadeIn("slow");
    });    
    e.preventDefault();
  });

  // ajax call for all current user's games and show result
  $("a#all_games").click(function(e) {
    e.preventDefault();

    var $games = $("div#hiddengames");
    var html = "<h3>Your Games</h3>";

    $.ajax({
      method: "GET",
      url: "/games",
      dataType: "json"
    })
      .done(function(data) {
        html += "<ul>"
        data.forEach(function(game, index, data) {
          var game = new Game(game);
          var gamenumber = index + 1; 
          html += "<li><a href='/games/" + game.id + "'>Game " + gamenumber + "</a>: " + game.capacity + " players | " + game.winner() + "</li>";
        });
        html += "</ul><button type='button' class='btn btn-outline-primary'>Back</button><br><br>"
        $games.html(html);
        $("div.buttons").fadeOut("slow", function() {
          $("div#hiddengames").fadeIn("slow");
        });
      });
  });
  
  //going back from games field to toggled away buttons
  $("div#hiddengames").on("click", "button", function() {
    $("div#hiddengames").fadeOut("slow", function() {
      $("div.buttons").fadeIn("slow");
    });
  });

  // change html background-image based on night or day.

  var changeBackgroundImage = function(src) {
    var $img = $( '<img src="' + src + '">' );
    $img.bind( 'load', function(){
      $("html").css({"background-image": "url(" + src + ")"});
    } );
    if( $img[0].width ){ $img.trigger( 'load' ); }
  }
  
  // submit the new night form with ajax post request

  $("#new_night_form").on("submit", "form", function(e) {
    e.preventDefault();

    // preload image to prevent browser flicker and change background image
    var src = "<%= asset_path('sea.jpg') %>"
    changeBackgroundImage(src);
    
    // reset the html of the areas that will have info being rendered after ajax call.
    $("div#edit_night_form").html("");
    $("div#aboutLastNight").html(""); 

    //ajax call
    var $form = $(this);
    var action = $form.attr("action");
    var params = $form.serialize();

    $.ajax({
      url: action,
      data: params,
      dataType: "json",
      method: "POST"
    })
      .done(function(data) {
        var game = new Game(data);
        var lastNight = game.lastNight();
        var aboutLastNight = lastNight.renderLastNight();
        $("div#aboutLastNight").html(aboutLastNight); 
        if (game.end()){
          game.renderResult(); 
          $("div#newnight_field").fadeOut("slow", function() {
            $("div#result").fadeIn("slow", function() {
              $("div#nightRoundup").fadeIn(300);
            });
          });
        } else {
          var editFormHtml = game.buildEditNightForm();
          $("div#edit_night_form").html(editFormHtml);
          // fade out the new night form, and fade in the edit night form
          $("div#newnight_field").fadeOut("slow", function() {
            $("div#editnight_field").fadeIn("slow");
          });
        }
    });
  });

  // getting last night logs through ajax get request
  $("#aboutLastNight").on("click", "a", function(e) {
    e.preventDefault();
    $.ajax({
      url: this.href,
      method: "GET",
      dataType: "json"
    })
      .done(function(data) {
        var logs = data.logs;
        $("#logs").html("");
        $("#logs").hide().html(logs).fadeIn("slow");
    });
  });

  //toggle night logs for each night in nightRoundups
  $("#nightRoundup").on("click", "div.toggleB", function() {
    $(this).next().slideToggle(600);
  });

  //submit the edit night form with ajax post request
  $("#edit_night_form").on("submit", "form", function(e) {
    e.preventDefault();

    // preload image to prevent browser flicker and change background image
    var src = "<%= asset_path('night.jpg') %>"
    changeBackgroundImage(src);
    
    // reset the html of the areas that will have info being rendered after ajax call.
    $("div#new_night_form").html("");
    $("div#aboutLastNight").html(""); 
    
    // ajax call
    var $form = $(this);
    var action = $form.attr("action");
    var params = $form.serialize();

    $.ajax({
      url: action,
      data: params,
      dataType: "json",
      method: "POST" 
    })
      .done(function(data) {
        var game = new Game(data);
        if (game.end()){
          game.renderResult(); 
          $("div#editnight_field").fadeOut("slow", function() {
            $("div#result").fadeIn("slow", function() {
              $("div#nightRoundup").fadeIn(300);
            });
          });
        } else {
          var newFormHtml = game.buildNewNightForm();
          $("div#new_night_form").html(newFormHtml);
          // fade out the edit night form, and fade in the new night form
          $("div#editnight_field").fadeOut("slow", function() {
            $("div#newnight_field").fadeIn("slow");
          });
        }
        var lastNight = game.lastNight();
        var aboutLastNight = lastNight.renderLastNight();
        $("div#aboutLastNight").html(aboutLastNight);
    });
  });


});
